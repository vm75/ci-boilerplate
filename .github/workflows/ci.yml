name: Build, Publish Docker Image, and Tag Repository

on:
  push:
    branches:
      - main # Monitor only the main branch
    paths:
      - 'CHANGELOG.md' # Trigger on changes to the CHANGELOG file
  workflow_dispatch: # Allow manual triggering of the workflow

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-tag:
    name: Build Docker Image and Tag Repository
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Extract version from the changelog
        id: get_version
        run: |
          version=$(head -n 1 CHANGELOG.md | sed 's/.*\[\(.*\)\].*/\1/')
          if [[ -z "$version" ]]; then
            echo "Error: Version not found in the changelog."
            exit 1
          fi
          echo "Extracted version: $version"
          major=$(echo "$version" | cut -d. -f1)
          minor=$(echo "$version" | cut -d. -f1,2)
          echo "major=$major" >> $GITHUB_ENV
          echo "minor=$minor" >> $GITHUB_ENV
          echo "version=$version" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container
          driver-opts: image=moby/buildkit:latest

      - name: Build Image (without pushing)
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: |
            ${{ github.repository }}:latest
            ${{ github.repository }}:${{ env.version }}
            ${{ github.repository }}:${{ env.major }}
            ${{ github.repository }}:${{ env.minor }}

      - name: Create and push Git tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.version }}
          git push origin ${{ env.version }}

  publish:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: build-and-tag
    permissions:
      packages: write
      contents: read
    steps:
      - name: Approve and publish
        uses: hmarr/auto-approve-action@v2 # Manual approval gate
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker Image
        id: push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ github.repository }}:latest
            ${{ github.repository }}:${{ env.version }}
            ${{ github.repository }}:${{ env.major }}
            ${{ github.repository }}:${{ env.minor }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      - name: Verify Image on Docker Hub
        run: docker pull docker.io/${{ env.IMAGE_NAME }}:${{ env.version }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true