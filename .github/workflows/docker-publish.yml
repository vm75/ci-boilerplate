name: Publish Docker Images with CGO

on:
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0
  workflow_dispatch: # Allow manual triggering of the workflow

env:
  # REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Log in to GitHub Container Registry
      #   uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      #   with:
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container
          driver-opts: image=moby/buildkit:latest

      - name: Set up QEMU for cross-platform builds
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            ${{ github.repository }}
          # ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest
          # type=semver,pattern={{major}}.{{minor}}
          # type=semver,pattern={{major}}

      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc musl-dev

      - name: Build and Push with CGO Enabled
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          build-args: |
            CGO_ENABLED=1
          tags: |
            docker.io/${{ env.IMAGE_NAME }}:latest
          # ghcr.io/${{ env.IMAGE_NAME }}:latest

      - name: Verify Image on Docker Hub
        run: docker pull docker.io/${{ env.IMAGE_NAME }}:latest
